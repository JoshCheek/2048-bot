#!/usr/bin/env ruby

$LOAD_PATH.unshift File.expand_path('../lib', __dir__)
require 'game/shift_board'
require 'game/board'
require 'game/display_ansi_board'
require 'io/console'

def show_frame(board)
  display = Game::DisplayAnsiBoard.call(board)
  print "\e[H\e[2J#{display}"
end


board = Game::Board.random_start
show_frame board

# hide cursor during game
print "\e[?25l"
at_exit { print "\e[?25h" }

# read one input at a time (not necessarily one char)
history = []
$stdin.raw do
  loop do
    show_frame board
    break if board.finished?
    break if board.won?
    input = $stdin.readpartial 2048
    action = case input
             when "\e[A", "k"       then :up
             when "\e[C", "l"       then :right
             when "\e[B", "j"       then :down
             when "\e[D", "h"       then :left
             when 'u'               then :undo
             when "q", 3.chr, 4.chr then :quit
             end

    next unless action
    case action
    when :quit
      break
    when :undo
      _, board = history.pop
    else
      history.push [action, board]
      next_board = Game::ShiftBoard.call(board, action)
      if board == next_board
        history.pop
      else
        show_frame next_board
        board = next_board.add_random_tile
      end
      sleep 0.1
    end
  end
end

puts
print "Save history (Y/n) "
answer = gets.chomp
answer = 'y' if answer == ''
if answer =~ /y/i
  File.open("history.csv", 'a') do |file|
    format = '%s,' + Array.new(16, '%d').join(',') + "\n"
    history.each do |move, board|
      file.write sprintf(format, move, *board.tiles)
    end
  end
end
